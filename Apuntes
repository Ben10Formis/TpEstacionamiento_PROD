//estructura de tablas
//autos
	int $id;
	string $patente;
 	dia hora $ingreso;
 delete 
				from autos 				
				WHERE id=:id

update autos 
				set marca='$this->patente'
				WHERE id='$this->id'

INSERT into autos (patente,ingreso)values('".$this->patente."','".$this->ingreso."')

select id, patente as patente , ingreso as ingreso from autos order by id desc

select id,patente as patente, ingreso as ingreso from autos"

select id, patente as patente, ingreso as ingreso from autos where id = $id

//usuario

	int $id;
 	string $mail;
 	string $clave;

INSERT into usuarios (mail,clave)values('".$this->mail."','".$this->clave."')";

delete 
			from usuarios 				
			WHERE id=:id"
update usuarios 
				set mail='$this->mail',
				clave='$this->clave',
				WHERE id='$this->id'")

"select id, mail as mail , clave as clave from usuarios");
"select id, mail as mail , clave as clave from usuarios where id = $id");
"select id, mail as mail , clave as clave from usuarios order by id desc");

//factura
	int $id;
	string $patente;
 	dia hora $ingreso;
 	dia hora $egreso;
 	float $monto;

delete 
				from facturas 				
				WHERE id=:id"

INSERT into facturas (patente,ingreso,egreso,monto)values('".$this->patente."','".$this->ingreso."','".$this->egreso."','".$this->monto."')

select id, patente as patente , ingreso as ingreso , egreso as egreso , monto as monto from facturas order by id desc

"select id, patente as patente , ingreso as ingreso , egreso as egreso , monto as monto from facturas");

select id, patente as patente , ingreso as ingreso , egreso as egreso , monto as monto from facturas where id = $id");

	case 'mostrarLoginSession':
		$nombre = isset($_POST['nombre']) ? $_POST['nombre'] : NULL;
		//$res["Exito"] = $nombre;		
		//echo json_encode($res);
		$contrasenia =isset($_POST['password']) ? $_POST['password'] : NULL;
		
		//busco en la BD si existe ese usuario
		//Consulto a la base y que me devuelva en array
		$usuarioTipo = usuarios::TraerUsuarioTipo($nombre,$contrasenia);
		//var_dump($usuarioTipo);
		if($usuarioTipo)
		{
			//echo $usuarioTipo->tipo;
			//echo json_encode($usuarioTipo);
			if( $usuarioTipo->tipo=="admin")
			{
				//muestro el formulario de administrador
				include("partes/formTesttest.php");
			}
			else
			{
				if ($usuarioTipo->tipo=="usuario")
				{
					//muestro el formulario de usuario
					include("partes/formLogin.php");

				}
				else
				{
					echo "No es un tipo de usuario";
				}
			}
		}
		else
		{
			echo "no existe en la base de datos";
		}
		//{"Exito":"admin@yahoo.com.ar"}
		//{"id":null,"email":null,"password":null,"tipo":"admin"}
	break;

	case "mostrarGrillaiwcreiwercuwear":
	
		$ArrayDeEmpleados = Mascota::TraerTodosLosEmpleados();

		$grilla = '<table class="table">
					<thead style="background:rgb(14, 26, 112);color:#fff;">
						<tr>
							<th>  NOMBRE     </th>
							<th>  EDAD     </th>
							<th>  NACIMIENTO     </th>
							<th>  TIPO   </th>
                            <th>  SEXO       </th>
							<th>  FOTO       </th>
							<th>  ACCION     </th>
						</tr> 
					</thead>';   	

		foreach ($ArrayDeEmpleados as $prod){
			$empleado = array();
			$empleado["nombre"] = $prod->GetNombre();
						$empleado["edad"] = $prod->GetEdad();
            $empleado["fechaNacimiento"] = $prod->GetFechaNacimiento();
			$empleado["tipo"] = $prod->GetTipo();            
            $empleado["rdoSexo"] = $prod->GetSexo();
			$empleado = json_encode($empleado);
		
			$grilla .= "<tr>
							<td>".$prod->GetNombre()."</td>
							<td>".$prod->GetEdad()."</td>
							<td>".$prod->GetFechaNacimiento()."</td>
							<td>".$prod->GetTipo()."</td>
							<td>".$prod->GetSexo()."</td>
							<td><img src='archivos/".$prod->GetFoto()."' width='100px' height='100px'/></td>
							<td><input type='button' value='Eliminar' class='MiBotonUTN' id='btnEliminar' onclick='Eliminarmascota($empleado)' />
								<input type='button' value='Modificar' class='MiBotonUTN' id='btnModificar' onclick='Modificarmascota($empleado)' /></td>
						</tr>";
		}
		
		$grilla .= '</table>';		
		
		echo $grilla;



		break;
		
	case "subirFoto":
		
		$res = Archivo::Subir();
		
		echo json_encode($res);

		break;
	
	case "borrarFoto":
		
		$pathFoto = isset($_POST['foto']) ? $_POST['foto'] : NULL;

		$res["Exito"] = Archivo::Borrar("./tmp/".$pathFoto);
		
		echo json_encode($res);
		
		break;
		
	case "agregar":
		$retorno["Exito"] = TRUE;
		$retorno["Mensaje"] = "";
		//echo "Antes de saber si es objeto json";
		$obj = isset($_POST['mascota']) ? json_decode(json_encode($_POST['mascota'])) : NULL;
		//echo "Llegue al constructor de mascotas";
		$p = new Mascota($obj->nombre,$obj->edad,$obj->fechaNacimiento,$obj->tipo,$obj->rdoSexo,$obj->archivo);
		
		if(!Mascota::Guardar($p)){
			$retorno["Exito"] = FALSE;
			$retorno["Mensaje"] = "Lamentablemente ocurrio un error y no se pudo escribir en el archivo.";
		}
		else{
			if(!Archivo::Mover("./tmp/".$obj->archivo, "./archivos/".$obj->archivo)){
				$retorno["Exito"] = FALSE;
				$retorno["Mensaje"] = "Lamentablemente ocurrio un error al mover el archivo del repositorio temporal al repositorio final.";
			}
			else{
				$retorno["Mensaje"] = "El archivo fue escrito correctamente. PRODUCTO agregado CORRECTAMENTE!!!";
			}
		}
	
		echo json_encode($retorno);
		
		break;
	
	case "eliminar":
		$retorno["Exito"] = TRUE;
		$retorno["Mensaje"] = "";
		$obj = isset($_POST['mascota']) ? json_decode(json_encode($_POST['mascota'])) : NULL;
		
		if(!Mascota::Eliminar($obj->nombre)){
			$retorno["Exito"] = FALSE;
			$retorno["Mensaje"] = "Lamentablemente ocurrio un error y no se pudo escribir en el archivo.";
		}
		else{
			$retorno["Mensaje"] = "El archivo fue escrito correctamente. PRODUCTO eliminado CORRECTAMENTE!!!";
		}
	
		echo json_encode($retorno);
		
		break;
		
	case "modificar":
		$retorno["Exito"] = TRUE;
		$retorno["Mensaje"] = "";
		$obj = isset($_POST['mascota']) ? json_decode(json_encode($_POST['mascota'])) : NULL;
		
		$p = new Mascota($obj->nombre,$obj->edad,$obj->fechaNacimiento,$obj->tipo,$obj->rdoSexo,$obj->archivo);
		
		if(!Mascota::Modificar($p)){
			$retorno["Exito"] = FALSE;
			$retorno["Mensaje"] = "Lamentablemente ocurrio un error y no se pudo escribir en el archivo.";
		}
		else{
			if(!Archivo::Mover("./tmp/".$obj->archivo, "./archivos/".$obj->archivo)){
				$retorno["Exito"] = FALSE;
				$retorno["Mensaje"] = "Lamentablemente ocurrio un error al mover el archivo del repositorio temporal al repositorio final.";
			}
			else{
				$retorno["Mensaje"] = "El archivo fue escrito correctamente. PRODUCTO modificado CORRECTAMENTE!!!";
			}
		}
	
		echo json_encode($retorno);
		
		break;

-----------------------------------------------
width: 60%;
	background: #ccc;
	margin: 0;
	padding: 0;
	position: relative;
	left: 0;
	bottom: 0;
	z-index: 100;
	/* gradient */
	background: #6a6a6a url(images/nav-bar-bg.png) repeat-x;
	background: -webkit-gradient(linear, left top, left bottom, from(#b9b9b9), to(#6a6a6a));
	background: -moz-linear-gradient(top,  #b9b9b9,  #6a6a6a);
	background: linear-gradient(-90deg, #670000, #001dab);
	/* rounded corner */
	-webkit-border-radius: 8px;
	-moz-border-radius: 8px;
	border-radius: 8px;
	/* box shadow */
	-webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,.3), 0 1px 1px rgba(0,0,0,.4);
	-moz-box-shadow: inset 0 1px 0 rgba(255,255,255,.3), 0 1px 1px rgba(0,0,0,.4);
	box-shadow: inset 0 1px 0 rgba(255,255,255,.3), 0 1px 1px rgba(0,0,0,.4);
}